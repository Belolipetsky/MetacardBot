# handlers/session.py
from aiogram import Router, types
from aiogram.filters import Text
from utils.storage import log_action
from utils.keyboards import session_keyboard

router = Router()

@router.message(Text(text="üéì –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Å—Å–∏—é –ø–æ –Ω–µ–π—Ä–æ–≥—Ä–∞—Ñ–∏–∫–µ", ignore_case=True))
async def session_info(message: types.Message):
    session_text = (
        "üí° –Ø –º–æ–≥—É –ø—Ä–æ–≤–µ—Å—Ç–∏ –ª–∏—á–Ω—É—é —Å–µ—Å—Å–∏—é –ø–æ –Ω–µ–π—Ä–æ–≥—Ä–∞—Ñ–∏–∫–µ, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ –æ—Å–æ–∑–Ω–∞—Ç—å –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é.\n"
        "–í–∂–∏–≤—É—é —è –ø—Ä–µ–¥–ª–æ–∂—É –≤—ã—Ç–∞—â–∏—Ç—å –∫–∞—Ä—Ç—É –∏–∑ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–æ–ª–æ–¥, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ —ç—Ç–æ–º –±–æ—Ç–µ.\n\n"
        "üîπ –ß—Ç–æ –±—É–¥–µ—Ç –Ω–∞ —Å–µ—Å—Å–∏–∏?\n"
        "‚ú® –ú—ã —Ä–∞–∑–±–µ—Ä—ë–º —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å —Å –ø–æ–º–æ—â—å—é –Ω–µ–π—Ä–æ–≥—Ä–∞—Ñ–∏–∫–∏ –∏ –º–µ—Ç–∞—Ñ–æ—Ä–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä—Ç.\n"
        "üîÆ –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —É–≤–∏–¥–µ—Ç—å —Å–∫—Ä—ã—Ç—ã–µ —Å–º—ã—Å–ª—ã –∏ –Ω–∞–π—Ç–∏ —Ä–µ—à–µ–Ω–∏—è.\n"
        "üé® –¢—ã —Å–º–æ–∂–µ—à—å —Å–∞–º —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–π —Ä–∏—Å—É–Ω–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—É—Å—Ç–∏—Ç –Ω—É–∂–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è.\n\n"
        "üìå –ì–æ—Ç–æ–≤ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?"
    )
    await message.answer(session_text, reply_markup=session_keyboard)
    log_action(message.from_user.id, "session_info_requested", "User requested session info.")

@router.message(Text(text="üéì –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ª–∏—á–Ω—É—é —Å–µ—Å—Å–∏—é", ignore_case=True))
async def book_session(message: types.Message):
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–±–æ—Ä –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–µ—Å—Å–∏—é
    await message.answer("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ª–∏—á–Ω—É—é —Å–µ—Å—Å–∏—é –ø—Ä–∏–Ω—è—Ç–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
    log_action(message.from_user.id, "session_booked", "User booked a session.")

@router.message(Text(text="üîÑ –ü–æ–¥—É–º–∞—Ç—å –ø–æ–∑–∂–µ", ignore_case=True))
async def session_decline(message: types.Message):
    await message.answer("‚ùå –•–æ—Ä–æ—à–æ, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ ‚Äì –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.")
    log_action(message.from_user.id, "session_declined", "User chose to think later.")
