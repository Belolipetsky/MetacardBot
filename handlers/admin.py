from aiogram import Router, types
from aiogram.filters import Command
from config import ADMINS

router = Router()

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
admin_data = {
    "greeting_text": "–ü—Ä–∏–≤–µ—Ç, —è –ú–∞—Ä–∏—è –∏ –ø–æ–º–æ–≥–∞—é –ª—é–¥—è–º —Ä–µ—à–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —á–µ—Ä–µ–∑ –Ω–µ–π—Ä–æ–≥—Ä–∞—Ñ–∏–∫—É.",
    "course_text": (
        "–ö—É—Ä—Å –ø–æ –Ω–µ–π—Ä–æ–≥—Ä–∞—Ñ–∏–∫–µ:\n"
        "–í —ç—Ç–æ–º –∫—É—Ä—Å–µ –≤—ã —É–∑–Ω–∞–µ—Ç–µ, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ–π—Ä–æ–≥—Ä–∞—Ñ–∏–∫—É –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º."
    ),
    "greeting_images": [],
    "course_images": []
}

def is_admin(username: str) -> bool:
    # –ï—Å–ª–∏ username –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω
    if not username:
        return False
    return username.lower() in [admin.lower() for admin in ADMINS]

@router.message(Command("admin"))
async def admin_panel(message: types.Message):
    username = message.from_user.username
    # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –º–æ–∂–Ω–æ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É:
    # print(f"Username: {username}")
    if not is_admin(username):
        return
    text = (
        "üîπ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å üîπ\n\n"
        "/setgreeting <—Ç–µ–∫—Å—Ç> - –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/setcourse <—Ç–µ–∫—Å—Ç> - –∏–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞\n"
        "/addgreetingpic - –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è (–æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Ñ–æ—Ç–æ)\n"
        "/addcoursepic - –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –¥–ª—è –∫—É—Ä—Å–∞ (–æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Ñ–æ—Ç–æ)\n"
        "/viewadmin - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n"
    )
    await message.answer(text)

@router.message(Command("setgreeting"))
async def set_greeting(message: types.Message):
    username = message.from_user.username
    if not is_admin(username):
        return
    new_text = message.get_args()
    if not new_text:
        await message.answer("‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è.")
        return
    admin_data["greeting_text"] = new_text
    await message.answer("‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")

@router.message(Command("setcourse"))
async def set_course(message: types.Message):
    username = message.from_user.username
    if not is_admin(username):
        return
    new_text = message.get_args()
    if not new_text:
        await message.answer("‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –∫—É—Ä—Å–∞.")
        return
    admin_data["course_text"] = new_text
    await message.answer("‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")

@router.message(Command("addgreetingpic"))
async def add_greeting_pic(message: types.Message):
    username = message.from_user.username
    if not is_admin(username):
        return
    if message.reply_to_message and message.reply_to_message.photo:
        photo = message.reply_to_message.photo[-1]
        file_id = photo.file_id
        admin_data["greeting_images"].append(file_id)
        await message.answer("‚úÖ –ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞.")
    else:
        await message.answer("‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É.")

@router.message(Command("addcoursepic"))
async def add_course_pic(message: types.Message):
    username = message.from_user.username
    if not is_admin(username):
        return
    if message.reply_to_message and message.reply_to_message.photo:
        photo = message.reply_to_message.photo[-1]
        file_id = photo.file_id
        admin_data["course_images"].append(file_id)
        await message.answer("‚úÖ –ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è –∫—É—Ä—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞.")
    else:
        await message.answer("‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É.")

@router.message(Command("viewadmin"))
async def view_admin_data(message: types.Message):
    username = message.from_user.username
    if not is_admin(username):
        return
    text = (
        f"üìå **–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:**\n\n"
        f"üìú **–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ:**\n{admin_data['greeting_text']}\n\n"
        f"üéì **–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞:**\n{admin_data['course_text']}\n\n"
        f"üñº **–ö–∞—Ä—Ç–∏–Ω–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è:** {len(admin_data['greeting_images'])} —à—Ç.\n"
        f"üñº **–ö–∞—Ä—Ç–∏–Ω–∫–∏ –∫—É—Ä—Å–∞:** {len(admin_data['course_images'])} —à—Ç."
    )
    await message.answer(text, parse_mode="Markdown")
